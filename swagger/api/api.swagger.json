{
  "swagger": "2.0",
  "info": {
    "title": "api/api.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/account": {
      "post": {
        "operationId": "GetAccount",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protocolAccount"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolAccount"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/v1/account/list": {
      "post": {
        "operationId": "ListAccounts",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protocolAccountList"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocolEmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    }
  },
  "definitions": {
    "ContractContractType": {
      "type": "string",
      "enum": [
        "AccountCreateContract",
        "TransferContract",
        "TransferAssetContract",
        "VoteAssetContract",
        "VoteexecutiveContract",
        "executiveCreateContract",
        "AssetIssueContract",
        "DeployContract",
        "executiveUpdateContract",
        "ParticipateAssetIssueContract"
      ],
      "default": "AccountCreateContract"
    },
    "Resultcode": {
      "type": "string",
      "enum": [
        "SUCESS",
        "FAILED"
      ],
      "default": "SUCESS"
    },
    "TransactionContract": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContractContractType"
        },
        "parameter": {
          "$ref": "#/definitions/protobufAny"
        }
      }
    },
    "TransactionResult": {
      "type": "object",
      "properties": {
        "fee": {
          "type": "string",
          "format": "int64"
        },
        "ret": {
          "$ref": "#/definitions/Resultcode"
        }
      }
    },
    "TransactionTransactionType": {
      "type": "string",
      "enum": [
        "UtxoType",
        "ContractType"
      ],
      "default": "UtxoType"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name whose content describes the type of the\nserialized protocol buffer message.\n\nFor URLs which use the scheme `http`, `https`, or no scheme, the\nfollowing restrictions and interpretations apply:\n\n* If no scheme is provided, `https` is assumed.\n* The last segment of the URL's path must represent the fully\n  qualified name of the type (as in `path/google.protobuf.Duration`).\n  The name should be in a canonical form (e.g., leading \".\" is\n  not accepted).\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protocolAccount": {
      "type": "object",
      "properties": {
        "account_name": {
          "type": "string",
          "format": "byte"
        },
        "type": {
          "$ref": "#/definitions/protocolAccountType"
        },
        "address": {
          "type": "string",
          "format": "byte"
        },
        "balance": {
          "type": "string",
          "format": "int64"
        },
        "votes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolAccountVote"
          }
        },
        "asset": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "latest_opration_time": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Account"
    },
    "protocolAccountList": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolAccount"
          }
        }
      }
    },
    "protocolAccountType": {
      "type": "string",
      "enum": [
        "Normal",
        "AssetIssue",
        "Contract"
      ],
      "default": "Normal"
    },
    "protocolAccountVote": {
      "type": "object",
      "properties": {
        "vote_address": {
          "type": "string",
          "format": "byte"
        },
        "vote_count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolAddress": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "format": "byte"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Gossip node address"
    },
    "protocolAssetIssueContract": {
      "type": "object",
      "properties": {
        "owner_address": {
          "type": "string",
          "format": "byte"
        },
        "name": {
          "type": "string",
          "format": "byte"
        },
        "total_supply": {
          "type": "string",
          "format": "int64"
        },
        "stb_num": {
          "type": "integer",
          "format": "int32"
        },
        "num": {
          "type": "integer",
          "format": "int32"
        },
        "start_time": {
          "type": "string",
          "format": "int64"
        },
        "end_time": {
          "type": "string",
          "format": "int64"
        },
        "decay_ratio": {
          "type": "integer",
          "format": "int32"
        },
        "vote_score": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string",
          "format": "byte"
        },
        "url": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocolAssetIssueList": {
      "type": "object",
      "properties": {
        "assetIssue": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolAssetIssueContract"
          }
        }
      }
    },
    "protocolBlock": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolTransaction"
          }
        },
        "block_header": {
          "$ref": "#/definitions/protocolBlockHeader"
        }
      },
      "title": "block"
    },
    "protocolBlockHeader": {
      "type": "object",
      "properties": {
        "raw_data": {
          "$ref": "#/definitions/protocolBlockHeaderraw"
        },
        "executive_signature": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocolBlockHeaderraw": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "txTrieRoot": {
          "type": "string",
          "format": "byte"
        },
        "parentHash": {
          "type": "string",
          "format": "byte"
        },
        "number": {
          "type": "string",
          "format": "int64",
          "title": "bytes nonce = 5;\nbytes difficulty = 6;"
        },
        "executive_id": {
          "type": "string",
          "format": "int64"
        },
        "executive_address": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocolEmptyMessage": {
      "type": "object"
    },
    "protocolNode": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/protocolAddress"
        }
      },
      "title": "Gossip node"
    },
    "protocolNodeList": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolNode"
          }
        }
      },
      "title": "Gossip node list"
    },
    "protocolNumberMessage": {
      "type": "object",
      "properties": {
        "num": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolReturn": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "protocolTransaction": {
      "type": "object",
      "properties": {
        "raw_data": {
          "$ref": "#/definitions/protocolTransactionraw"
        },
        "signature": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "ret": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionResult"
          }
        }
      }
    },
    "protocolTransactionraw": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TransactionTransactionType"
        },
        "ref_block_num": {
          "type": "string",
          "format": "int64"
        },
        "ref_block_hash": {
          "type": "string",
          "format": "byte"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "contract": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionContract"
          }
        },
        "scripts": {
          "type": "string",
          "format": "byte"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolVoteexecutiveContractVote": {
      "type": "object",
      "properties": {
        "vote_address": {
          "type": "string",
          "format": "byte"
        },
        "vote_count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocolexecutive": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "voteCount": {
          "type": "string",
          "format": "int64"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        },
        "url": {
          "type": "string"
        },
        "totalProduced": {
          "type": "string",
          "format": "int64"
        },
        "totalMissed": {
          "type": "string",
          "format": "int64"
        },
        "latestBlockNum": {
          "type": "string",
          "format": "int64"
        },
        "latestSlotNum": {
          "type": "string",
          "format": "int64"
        },
        "isJobs": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "executive"
    },
    "protocolexecutiveList": {
      "type": "object",
      "properties": {
        "executives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protocolexecutive"
          }
        }
      }
    }
  }
}
